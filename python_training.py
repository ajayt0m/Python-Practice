# -*- coding: utf-8 -*-
"""Python training.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17syxXJ6kaLYLF-lNkegmLpIugEGmYMZ0

# **Python Training programs**

---

# **Python program to find greatest of two numbers**
"""

# Python program to find greatest of two numbers
number1 = input("Input the number")
number2 = input("Input the second number")

def maximum(a, b) :
    if (a > b):
        return a
    else:
        return b
    
max = maximum(number1, number2)
print("The maximum is {0}" .format(max))

"""# **Python program to find greatest of 3 numbers**"""

#Python program to find greatest of 3 numbers
number1 = input("Input the first number ")
number2 = input("Input the second number")
number3 = input("Input the third number")

def maxx(a, b, c):
    if (a > b and a > c):
        return a
    elif (b > a and b > c):
        return b
    else:
        return c
maximum = maxx(number1, number2, number3)
print("The maximum is {0}" .format(maximum))

"""# **Python program to print the factorial**"""

#Python program to print the factorial
number1 = int(input("Input the number to find the factorial "))

def factorial(a):
    fact = 1
    while (a > 0):
        fact = fact * a
        a = a - 1
    return fact

facto = factorial(number1)
print(facto)

"""# **Python program to calculate simple interest**"""

#Python program to calculate simple interest
principle = int(input("Principle :"))
time = int(input("Time:"))
rate = int(input("Rate:"))
def si(a, b ,c):
    value = (a*b*c)/100
    return value
print(si(principle, time, rate))

"""# **Python program to calculate compound interest**"""

#Python program to calculate compound interest
principle = int(input("Principle :"))
time = int(input("Time:"))
rate = float(input("Rate:"))
def ci(a, b ,c):
    amount = a*(pow(1+(c/100), b))
    value = amount - a
    return value
print(ci(principle, time, rate))

"""# **Python program to check armstrong number**"""

#Python program to check armstrong number
number = int(input("Enter a number"))
 
def multiply(b):
  i = 0
  while (b > 0):
    i = i + 1
    b = b // 10
  return i 

def armstrong(a,n):
    totalsum = 0  
    while (a > 0):
        digit = a % 10;
        digitsum = pow(digit, n)
        totalsum = totalsum + digitsum
        a = a//10
    return totalsum
new = armstrong(number, multiply(number))
if (new == number):
  print("{0} is an armstrong number" .format(number))
else:
  print("{0} is not an armstrong number" .format(number))

"""# **Python program to print all Prime numbers in an Interval**"""

#Prime numbers in an interval
lowerlimit = int(input("Input the lower limit:"))
upperlimit = int(input("Input the upper limit:"))

def prime(a):
  if (a== 0 or a == 1):
    return -1
  elif (a == 2):
    return 1
  else:
    check = 0
    for i in range (2,a):
      if ((a % i) == 0):
        check = 1
    if(check == 0):
      return 1

for j in range (lowerlimit,upperlimit+1):
  if(prime(j) == 1):
    print(j)

for i in range (2,a):